C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\AndroidManifest.xml:11: Warning: Attribute usesCleartextTraffic is only used in API level 23 and higher (current min is 22) [UnusedAttribute]
        android:usesCleartextTraffic="true"
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\AndroidManifest.xml:12: Warning: Attribute networkSecurityConfig is only used in API level 24 and higher (current min is 22) [UnusedAttribute]
        android:networkSecurityConfig="@xml/network_security_config"> <!-- Enlazar configuraciÃ³n de seguridad -->
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedAttribute":
   This check finds attributes set in XML files that were introduced in a
   version newer than the oldest version targeted by your application (with
   the minSdkVersion attribute).

   This is not an error; the application will simply ignore the attribute.
   However, if the attribute is important to the appearance or functionality
   of your application, you should consider finding an alternative way to
   achieve the same result with only available attributes, and then you can
   optionally create a copy of the layout in a layout-vNN folder which will be
   used on API NN or higher where you can take advantage of the newer
   attribute.

   Note: This check does not only apply to attributes. For example, some tags
   can be unused too, such as the new <tag> element in layouts introduced in
   API 21.

C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\AndroidManifest.xml:41: Warning: <uses-permission> tag appears after <application> tag [ManifestOrder]
    <uses-permission android:name="android.permission.INTERNET" />
     ~~~~~~~~~~~~~~~

   Explanation for issues of type "ManifestOrder":
   The <application> tag should appear after the elements which declare which
   version you need, which features you need, which libraries you need, and so
   on. In the past there have been subtle bugs (such as themes not getting
   applied correctly) when the <application> tag appears before some of these
   other elements, so it's best to order your manifest in the logical
   dependency order.

C:\Users\Harrys Stevan\inventarioSimApp\android\app\build.gradle:37: Warning: A newer version of androidx.appcompat:appcompat than 1.6.1 is available: 1.7.0 [GradleDependency]
  implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Harrys Stevan\inventarioSimApp\android\app\build.gradle:39: Warning: A newer version of androidx.core:core-splashscreen than 1.0.0 is available: 1.0.1 [GradleDependency]
  implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Harrys Stevan\inventarioSimApp\android\app\build.gradle:41: Warning: A newer version of androidx.webkit:webkit than 1.7.0 is available: 1.12.1 [GradleDependency]
  implementation "androidx.webkit:webkit:1.7.0"
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "GradleDependency":
   This detector looks for usages of libraries where the version you are using
   is not the current stable release. Using older versions is fine, and there
   are cases where you deliberately want to stick with an older version.
   However, you may simply not be aware that a more recent version is
   available, and that is what this lint check helps find.

C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\layout\activity_main.xml:2: Warning: The resource R.layout.activity_main appears to be unused [UnusedResources]
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\xml\config.xml:2: Warning: The resource R.xml.config appears to be unused [UnusedResources]
<widget version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">
^
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\drawable\ic_launcher_background.xml:2: Warning: The resource R.drawable.ic_launcher_background appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\drawable-v24\ic_launcher_foreground.xml:1: Warning: The resource R.drawable.ic_launcher_foreground appears to be unused [UnusedResources]
<vector xmlns:android="http://schemas.android.com/apk/res/android"
^
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\values\strings.xml:5: Warning: The resource R.string.package_name appears to be unused [UnusedResources]
    <string name="package_name">io.ionic.starter</string>
            ~~~~~~~~~~~~~~~~~~~
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\values\strings.xml:6: Warning: The resource R.string.custom_url_scheme appears to be unused [UnusedResources]
    <string name="custom_url_scheme">io.ionic.starter</string>
            ~~~~~~~~~~~~~~~~~~~~~~~~
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\values\styles.xml:12: Warning: The resource R.style.AppTheme_NoActionBar appears to be unused [UnusedResources]
    <style name="AppTheme.NoActionBar" parent="Theme.AppCompat.DayNight.NoActionBar">
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "UnusedResources":
   Unused resources make applications larger and slow down builds.


   The unused resource check can ignore tests. If you want to include
   resources that are only referenced from tests, consider packaging them in a
   test source set instead.

   You can include test sources in the unused resource check by setting the
   system property lint.unused-resources.include-tests =true, and to exclude
   them (usually for performance reasons), use
   lint.unused-resources.exclude-tests =true.
   ,

C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\mipmap-anydpi-v26\ic_launcher.xml:2: Warning: The application adaptive icon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^
C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\mipmap-anydpi-v26\ic_launcher_round.xml:2: Warning: The application adaptive roundIcon is missing a monochrome tag [MonochromeLauncherIcon]
<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
^

   Explanation for issues of type "MonochromeLauncherIcon":
   If android:roundIcon and android:icon are both in your manifest, you must
   either remove the reference to android:roundIcon if it is not needed; or,
   supply the monochrome icon in the drawable defined by the android:roundIcon
   and android:icon attribute.

   For example, if android:roundIcon and android:icon are both in the
   manifest, a launcher might choose to use android:roundIcon over
   android:icon to display the adaptive app icon. Therefore, your themed
   application iconwill not show if your monochrome attribute is not also
   specified in android:roundIcon.

C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\drawable-land-xxxhdpi\splash.png: Warning: The image splash.png varies significantly in its density-independent (dip) size across the various density versions: drawable-land-hdpi/splash.png: 533x320 dp (800x480 px), drawable-land-mdpi/splash.png: 480x320 dp (480x320 px), drawable-land-xhdpi/splash.png: 640x360 dp (1280x720 px), drawable-land-xxhdpi/splash.png: 533x320 dp (1600x960 px), drawable-land-xxxhdpi/splash.png: 480x320 dp (1920x1280 px) [IconDipSize]

   Explanation for issues of type "IconDipSize":
   Checks the all icons which are provided in multiple densities, all compute
   to roughly the same density-independent pixel (dip) size. This catches
   errors where images are either placed in the wrong folder, or icons are
   changed to new sizes but some folders are forgotten.

C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\drawable\splash.png: Warning: The splash.png icon has identical contents in the following configuration folders: drawable-land-mdpi, drawable [IconDuplicatesConfig]

   Explanation for issues of type "IconDuplicatesConfig":
   If an icon is provided under different configuration parameters such as
   drawable-hdpi or -v11, they should typically be different. This detector
   catches cases where the same icon is provided in different configuration
   folder which is usually not intentional.

C:\Users\Harrys Stevan\inventarioSimApp\android\app\src\main\res\drawable\splash.png: Warning: Found bitmap drawable res/drawable/splash.png in densityless folder [IconLocation]

   Explanation for issues of type "IconLocation":
   The res/drawable folder is intended for density-independent graphics such
   as shapes defined in XML. For bitmaps, move it to drawable-mdpi and
   consider providing higher and lower resolution versions in drawable-ldpi,
   drawable-hdpi and drawable-xhdpi. If the icon really is density independent
   (for example a solid color) you can place it in drawable-nodpi.

   https://developer.android.com/guide/practices/screens_support.html

0 errors, 18 warnings
