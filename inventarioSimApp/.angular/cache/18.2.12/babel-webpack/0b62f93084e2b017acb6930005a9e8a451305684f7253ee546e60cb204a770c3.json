{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ionic/angular\";\nfunction DashboardPage_div_8_ion_list_6_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 3);\n    i0.ɵɵlistener(\"click\", function DashboardPage_div_8_ion_list_6_ion_item_1_Template_ion_item_click_0_listener() {\n      const sim_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.selectSimCard(sim_r2));\n    });\n    i0.ɵɵelementStart(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const sim_r2 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassProp(\"selected\", ctx_r2.selectedSim === sim_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"ICCID: \", sim_r2.iccid, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Operador: \", sim_r2.operador, \"\");\n  }\n}\nfunction DashboardPage_div_8_ion_list_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, DashboardPage_div_8_ion_list_6_ion_item_1_Template, 6, 4, \"ion-item\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.simCards);\n  }\n}\nfunction DashboardPage_div_8_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No hay SIM cards disponibles para mostrar.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardPage_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-card\")(2, \"ion-card-header\")(3, \"ion-card-title\");\n    i0.ɵɵtext(4, \"SIM Cards (Administrador)\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-card-content\");\n    i0.ɵɵtemplate(6, DashboardPage_div_8_ion_list_6_Template, 2, 1, \"ion-list\", 6)(7, DashboardPage_div_8_ng_template_7_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const noSimCards_r4 = i0.ɵɵreference(8);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.simCards.length > 0)(\"ngIfElse\", noSimCards_r4);\n  }\n}\nfunction DashboardPage_div_9_ion_list_6_ion_item_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const sim_r5 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sim_r5.iccid);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(sim_r5.operador);\n  }\n}\nfunction DashboardPage_div_9_ion_list_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\")(1, \"ion-item\")(2, \"ion-label\");\n    i0.ɵɵtext(3, \"ICCID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-label\");\n    i0.ɵɵtext(5, \"Operador\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, DashboardPage_div_9_ion_list_6_ion_item_6_Template, 5, 2, \"ion-item\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.simCards);\n  }\n}\nfunction DashboardPage_div_9_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No hay SIM cards disponibles para mostrar.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardPage_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-card\")(2, \"ion-card-header\")(3, \"ion-card-title\");\n    i0.ɵɵtext(4, \"Visualizaci\\u00F3n de SIM Cards\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"ion-card-content\");\n    i0.ɵɵtemplate(6, DashboardPage_div_9_ion_list_6_Template, 7, 1, \"ion-list\", 6)(7, DashboardPage_div_9_ng_template_7_Template, 2, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const noUserSimCards_r6 = i0.ɵɵreference(8);\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.simCards.length > 0)(\"ngIfElse\", noUserSimCards_r6);\n  }\n}\nfunction DashboardPage_ion_footer_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-footer\")(1, \"ion-button\", 9);\n    i0.ɵɵlistener(\"click\", function DashboardPage_ion_footer_10_Template_ion_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToAddSimCard());\n    });\n    i0.ɵɵtext(2, \"Agregar SIM Card\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function DashboardPage_ion_footer_10_Template_ion_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.editSimCard());\n    });\n    i0.ɵɵtext(4, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function DashboardPage_ion_footer_10_Template_ion_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteSimCard());\n    });\n    i0.ɵɵtext(6, \"Eliminar\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.selectedSim);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r2.selectedSim);\n  }\n}\nexport let DashboardPage = /*#__PURE__*/(() => {\n  var _DashboardPage;\n  class DashboardPage {\n    constructor(apiService, router) {\n      this.apiService = apiService;\n      this.router = router;\n      this.simCards = [];\n      this.userRole = '';\n      this.selectedSim = null;\n    }\n    ngOnInit() {\n      this.userRole = this.apiService.obtenerRolUsuario(); // Obtener el rol del usuario almacenado en el servicio\n      this.loadSimCards();\n    }\n    ionViewWillEnter() {\n      this.loadSimCards(); // Recargar la lista cada vez que se entra a la vista del Dashboard\n    }\n    loadSimCards() {\n      console.log('Llamando a getSimCards');\n      this.apiService.getSimCards().subscribe(data => {\n        console.log('Datos recibidos de SIM cards:', data); // Verificar datos recibidos\n        this.simCards = data && data.length ? data : []; // Si no hay datos, asigna un array vacío\n      }, error => {\n        console.error('Error al cargar las SIM cards:', error);\n        alert('Error al cargar las SIM cards');\n      });\n    }\n    goToAddSimCard() {\n      if (this.userRole === 'admin') {\n        this.router.navigateByUrl('/add-simcard');\n      }\n    }\n    selectSimCard(sim) {\n      this.selectedSim = sim;\n    }\n    editSimCard() {\n      if (this.userRole === 'admin' && this.selectedSim) {\n        this.router.navigate(['/edit-simcard', this.selectedSim.id]);\n      }\n    }\n    deleteSimCard() {\n      if (this.userRole === 'admin' && this.selectedSim && confirm('¿Estás seguro de que deseas eliminar esta SIM card?')) {\n        this.apiService.deleteSimCard(this.selectedSim.id).subscribe(response => {\n          if (response.success) {\n            console.log('SIM card eliminada correctamente');\n            this.loadSimCards(); // Recargar la lista después de eliminar\n            this.selectedSim = null; // Desmarcar la SIM seleccionada\n          } else {\n            alert('Error al eliminar la SIM card');\n          }\n        }, error => {\n          console.error('Error al eliminar la SIM card:', error);\n          alert('Error al eliminar la SIM card');\n        });\n      }\n    }\n    logout() {\n      this.apiService.logout();\n      this.router.navigateByUrl('/login');\n    }\n  }\n  _DashboardPage = DashboardPage;\n  _DashboardPage.ɵfac = function DashboardPage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _DashboardPage)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  _DashboardPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _DashboardPage,\n    selectors: [[\"app-dashboard\"]],\n    decls: 11,\n    vars: 3,\n    consts: [[\"noSimCards\", \"\"], [\"noUserSimCards\", \"\"], [\"slot\", \"end\"], [3, \"click\"], [1, \"ion-padding\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [3, \"selected\", \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [\"expand\", \"full\", \"color\", \"success\", 3, \"click\"], [\"expand\", \"full\", \"color\", \"primary\", 3, \"click\", \"disabled\"], [\"expand\", \"full\", \"color\", \"danger\", 3, \"click\", \"disabled\"]],\n    template: function DashboardPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 2)(5, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function DashboardPage_Template_ion_button_click_5_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(6, \" Cerrar Sesi\\u00F3n \");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(7, \"ion-content\", 4);\n        i0.ɵɵtemplate(8, DashboardPage_div_8_Template, 9, 2, \"div\", 5)(9, DashboardPage_div_9_Template, 9, 2, \"div\", 5)(10, DashboardPage_ion_footer_10_Template, 7, 2, \"ion-footer\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.userRole === \"admin\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.userRole === \"user\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.userRole === \"admin\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf, i4.IonButton, i4.IonButtons, i4.IonCard, i4.IonCardContent, i4.IonCardHeader, i4.IonCardTitle, i4.IonContent, i4.IonFooter, i4.IonHeader, i4.IonItem, i4.IonLabel, i4.IonList, i4.IonTitle, i4.IonToolbar],\n    styles: [\"@charset \\\"UTF-8\\\";.selected[_ngcontent-%COMP%]{background-color:#d3d3d3}\"]\n  });\n  return DashboardPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}